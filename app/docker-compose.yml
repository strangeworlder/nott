services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=nott_dev
      - POSTGRES_USER=nott_user
      - POSTGRES_PASSWORD=nott_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - nott-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nott_user -d nott_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nott-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # TURN server for WebRTC
  coturn:
    image: coturn/coturn:4.6.2
    ports:
      - "3478:3478"
      - "3478:3478/udp"
      - "49152-49162:49152-49162/udp"
    environment:
      - TURN_USERNAME=nott_user
      - TURN_PASSWORD=nott_password
      - TURN_REALM=nott.local
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: >
      --listening-port=3478
      --listening-ip=0.0.0.0
      --realm=nott.local
      --user=nott_user:nott_password
      --no-auth
      --log-file stdout
      --min-port=49152
      --max-port=49162
      --syslog
      --fingerprint
    networks:
      - nott-network
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c 'echo -n \"TURN server ready\"'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Backend development server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "4013:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DATABASE_URL=postgresql://nott_user:nott_password@postgres:5432/nott_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-dev
      - TURN_SERVER_URL=turn:nott_user:nott_password@coturn:3478
      - FRONTEND_URL=http://localhost:3013
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      coturn:
        condition: service_healthy
    networks:
      - nott-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend development server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3013:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:4013
      - VITE_WS_URL=ws://localhost:4013
      - FRONTEND_URL=http://localhost:3013
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - nott-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 120s

  # Nginx reverse proxy for development
  nginx:
    image: nginx:alpine
    ports:
      - "8013:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - nott-network

volumes:
  postgres_data:
  redis_data:

networks:
  nott-network:
    driver: bridge