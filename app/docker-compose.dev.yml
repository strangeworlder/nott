version: '3.8'

services:
  # PostgreSQL database for development
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-nott_dev}
      - POSTGRES_USER=${POSTGRES_USER:-nott_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-nott_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - nott-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-nott_user} -d ${POSTGRES_DB:-nott_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nott-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # TURN server for WebRTC development
  coturn:
    image: coturn/coturn:4.6.2
    ports:
      - "3478:3478"
      - "3478:3478/udp"
      - "49152-49162:49152-49162/udp"
    environment:
      - TURN_USERNAME=${TURN_USERNAME:-nott_user}
      - TURN_PASSWORD=${TURN_PASSWORD:-nott_password}
      - TURN_REALM=${TURN_REALM:-nott.local}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: >
      --listening-port=3478
      --listening-ip=0.0.0.0
      --realm=${TURN_REALM:-nott.local}
      --user=${TURN_USERNAME:-nott_user}:${TURN_PASSWORD:-nott_password}
      --no-auth
      --log-file stdout
      --min-port=49152
      --max-port=49162
      --syslog
      --fingerprint
    networks:
      - nott-network
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c 'echo -n \"TURN server ready\"'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Backend development server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "4013:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DATABASE_URL=postgresql://${POSTGRES_USER:-nott_user}:${POSTGRES_PASSWORD:-nott_password}@postgres:5432/${POSTGRES_DB:-nott_dev}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-dev}
      - TURN_SERVER_URL=turn:${TURN_USERNAME:-nott_user}:${TURN_PASSWORD:-nott_password}@coturn:3478
      - FRONTEND_URL=http://localhost:3013
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      coturn:
        condition: service_healthy
    networks:
      - nott-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend development server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev  # Use the fixed Dockerfile.dev
    ports:
      - "3013:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.vite
    environment:
      - NODE_ENV=development
      - VITE_APP_ENV=development
      - VITE_API_BASE_URL=http://localhost:4013
      - VITE_SOCKET_URL=http://localhost:4013
      - VITE_API_TIMEOUT=10000
      - VITE_SOCKET_TIMEOUT=5000
      - VITE_ENABLE_DEBUG=true
      - VITE_ENABLE_LOGGING=true
      - VITE_ENABLE_HOT_RELOAD=true
      - VITE_ENABLE_SOURCE_MAPS=true
      - VITE_ENABLE_PROFILING=true
      - VITE_ENABLE_PERFORMANCE_MONITORING=true
      - VITE_ENABLE_DEVTOOLS=true
      - VITE_ENABLE_ERROR_OVERLAY=true
      - VITE_BUILD_ANALYZE=false
      - VITE_BUILD_COMPRESS=false
      - VITE_ENABLE_PWA=false
      - VITE_ENABLE_OFFLINE_MODE=false
      - VITE_ENABLE_ANALYTICS=false
      - VITE_DEV_SERVER_PORT=3000
      - VITE_DEV_SERVER_HOST=0.0.0.0
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - nott-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 120s

  # Nginx reverse proxy for development
  nginx:
    image: nginx:alpine
    ports:
      - "8013:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - nott-network

  # Development tools
  dev-tools:
    image: node:24.3.0-alpine
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    environment:
      - NODE_ENV=development
    networks:
      - nott-network
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:

networks:
  nott-network:
    driver: bridge 