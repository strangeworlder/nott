---
alwaysApply: true
---

# No `any` Type Allowed

**Rule:**  
Do not use the `any` type anywhere in the codebase, including tests, utilities, and prototypes.

- Use explicit, precise types or generics.
- If a type is truly unknown, use `unknown` or a more specific type.
- For test utilities, prefer `ComponentMountingOptions<Record<string, unknown>>` or similar, or use a generic with a default.

**Rationale:**  
Using `any` disables type safety and undermines the benefits of TypeScript. All code must be type-safe and pass strict type checks.

**Examples:**

```ts
// BAD
function foo(bar: any): any { ... }

// GOOD
function foo<T = unknown>(bar: T): T { ... }
```
